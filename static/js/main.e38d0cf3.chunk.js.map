{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","about","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","e","newText","preventDefault","showAlert","newText2","split","length","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.e38d0cf3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1); \r\n    }\r\n  return (\r\n   props.alert && <div>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n<strong> {capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n  \r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\" >{props.about}</a>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className={`form-check form-switch ${props.mode==='black'? 'white':'dark'} `} >\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked=\"false\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    home: PropTypes.string\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick= (e)=>{\r\n        \r\n        console.log('Uppercase is clicked' + text)\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        e.preventDefault();\r\n        props.showAlert('converted to uppercase', 'success')\r\n    }\r\n    const handleLoClick= (e)=>{\r\n        \r\n        console.log('LowerCase is clicked' + text)\r\n        let newText2=text.toLowerCase();\r\n        setText(newText2);\r\n        e.preventDefault();\r\n        props.showAlert('converted to lowercase', 'info')\r\n    }\r\n\r\n\r\n    // const handleOnClear=(e)=>{\r\n    //     let newText='';\r\n    //     setText(newText)\r\n    //     e.preventDefault();\r\n    // }\r\n\r\n    const handleOnChange =(event)=>{\r\n        console.log('on change')\r\n        setText(event.target.value);\r\n        \r\n    }\r\n    const [text, setText]= useState('')\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className='container' style={ {color: props.mode==='light'? 'black':'white'}} >\r\n            <h1>{props.heading}</h1>\r\n\r\n            <form>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\"></label>\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'? 'white':'white', color: props.mode==='white'? 'dark':'black'}} id=\"myBox\" rows=\"7\"></textarea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-danger mx-2\" onClick={handleUpClick} >Convert To Upper Case</button>\r\n                \r\n                <button type=\"submit\" className=\"btn btn-info mx-2\" onClick={handleLoClick} >Convert To Lower Case</button>\r\n\r\n                {/* <button type=\"submit\" className=\"btn btn-info mx-2\" onClickr={handleOnClear} >Clear all</button> */}\r\n            </form>\r\n        </div> \r\n        <div className=\"container my-3\" style={ {color: props.mode==='dark'? 'white':'#031252'}} >\r\n            <h3>Text Summary</h3>\r\n            <p>Total {text.split(\" \").length} words  and {text.length} characters</p>\r\n            <p> {0.008*text.split(\" \").length} Minutes Read </p>\r\n            <h4>Preview  </h4>\r\n            <p>{text.length>0? text:\"Enter the sentence in the text box to see the preview\"}</p>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","\nimport { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\n\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React from \"react\";\n\n// import {\n//     BrowserRouter as Router,\n//     Routes,\n//     Route\n// } from \"react-router-dom\";\n\n\nexport default\n    function App() {\n    const [mode, setMode] = useState('light');\n    const [alert, setAlert] = useState(null)\n\n    const showAlert = (msg, type) => {\n        setAlert({\n            msg: msg,\n            type: type\n        });\n        setTimeout(() => {\n            setAlert(null);\n\n        }, 1500);\n\n\n    }\n\n    const toggleMode = () => {\n        if (mode === 'light') {\n            setMode('dark')\n            document.body.style.backgroundColor = '#031252'\n            showAlert(\"Dark mode :ON\", \"success\")\n            document.title = 'TextUtilss-Dark Mode';\n\n        }\n\n\n\n        else {\n            setMode('light')\n            document.body.style.backgroundColor = 'white'\n            showAlert('Dark mode: Off', 'warning')\n            document.title = 'TextUtilss-Light Mode';\n\n\n        }\n    }\n\n    // setInterval(() => {\n    //   document.title=\"TextUtils is Amazing\";\n    // }, 1000);\n\n    // setInterval(() => {\n    //   document.title=\" Install TextUtilss NOW\";\n    // }, 1800);\n\n\n\n\n\n\n    return (\n        <>\n\n            <Navbar title=\"TextUtilss\" home=\"Home\" mode={mode} toggleMode={toggleMode} about='About' />\n\n            <Alert alert={alert} />\n\n\n            {/* <Routes>\n\n                    \n\n                    <Route exact path=\"/about\" element={  <About/>} >\n                        \n                    </Route> */}\n\n\n            <TextForm heading=\"Enter The Text\" mode={mode} showAlert={showAlert} />\n\n            {/* <Route exact path=\"/\"  */}\n\n\n\n\n            {/*                         \n                    </Route>\n                </Routes> */}\n\n\n\n\n\n\n\n\n            {/* <div className=\"container my-3 mx 7\">\n        <About />\n    </div> */}\n\n\n        </>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}